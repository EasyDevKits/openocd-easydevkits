# SPDX-License-Identifier: GPL-2.0-or-later
#

# Target specific global variables
# config for 2 cores (HP+LP) in SMP mode
set _ONLYCPU                    0x11
set _ESP_SMP_TARGET				1
set ESP_RTOS				    "hwthread"

# Source the ESP32-C5 configuration file.
source [find target/esp32c5.cfg]

# Source some helpers.
source [find mem_helper.tcl]

set PMU_LP_CPU_PWR0_REG 	0x600B0180
set PMU_HP_LP_CPU_COMM_REG 	0x600B0188
set PMU_LP_CPU_PWR1_REG 	0x600B0184
set LPPERI_CLK_EN_REG 		0x600B2800
set LPPERI_RESET_EN_REG 	0x600B2804
set LPPERI_CPU_REG 			0x600B280c
set LPAON_LPBBUS_REG        0x600B1048

proc reg_set { ADDR VAL } {
	mmw $ADDR $VAL 0
}

proc reg_clear { ADDR VAL } {
	mmw $ADDR 0 $VAL
}

proc lpcore_reset { } {
    global PMU_LP_CPU_PWR0_REG PMU_HP_LP_CPU_COMM_REG PMU_LP_CPU_PWR1_REG
    global LPPERI_RESET_EN_REG LPPERI_CPU_REG LPAON_LPBBUS_REG _TARGETNAME_0

    $_TARGETNAME_0 arp_examine
    targets $_TARGETNAME_0

    # LPPERI.reset_en.lp_cpu_reset_en = 0;
    reg_clear $LPPERI_RESET_EN_REG 0x80000000

    # LP_AON.lpbus.fast_mem_mux_sel = enable;
    # LP_AON.lpbus.fast_mem_mux_sel_update = 1;
    reg_set $LPAON_LPBBUS_REG 0xc0000000

    # PMU.lp_ext.pwr0.slp_stall_en = 1;
    # PMU.lp_ext.pwr0.slp_reset_en = 1;
	reg_set $PMU_LP_CPU_PWR0_REG 0x60000000

    # PMU.lp_ext.pwr1.wakeup_en = LP_CORE_LL_WAKEUP_SOURCE_HP_CPU;
    # PMU.lp_ext.pwr1.sleep_req = 1;
	reg_set $PMU_LP_CPU_PWR1_REG 0x80000001

	# set up infinite loop code 'j 0x0' at 0x50000080
	mww 0x50000080 0x0000006F

    # PMU.hp_lp_cpu_comm.hp_trigger_lp = 1;
	reg_set $PMU_HP_LP_CPU_COMM_REG 0x80000000

    # Wait for the reset to happen
    sleep 10
    poll

    # PMU.lp_ext.pwr0.slp_stall_en = 1;
    # PMU.lp_ext.pwr0.slp_reset_en = 0;
	reg_clear $PMU_LP_CPU_PWR0_REG 0x40000000

    # LPPERI.reset_en.lp_cpu_reset_en = 0;
    reg_clear $LPPERI_RESET_EN_REG 0x80000000

    # LPPERI.cpu.lpcore_dbgm_unavaliable = 0;
	reg_clear $LPPERI_CPU_REG 0x80000000
}

$_TARGETNAME_0 configure -event reset-start {
    lpcore_reset
}
