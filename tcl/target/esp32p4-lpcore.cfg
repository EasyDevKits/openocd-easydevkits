# SPDX-License-Identifier: GPL-2.0-or-later
#

# Target specific global variables
# config for 3 cores (2xHP+LP) in SMP mode
set _ONLYCPU                    0x13
set _ESP_SMP_TARGET				1
# allow to use SW breakpoints when flash support is disabled
set _NO_FLASH_FORCES_HW_BPS     0
set ESP_RTOS				    "hwthread"
set ESP_FLASH_SIZE              0

# Source the ESP32-P4 configuration file.
source [find target/esp32p4.cfg]

# Source some helpers.
source [find mem_helper.tcl]

set PMU_LP_CPU_PWR0_REG 	0x50115184
set PMU_HP_LP_CPU_COMM_REG 	0x5011519c
set PMU_LP_CPU_PWR1_REG 	0x50115188
set PMU_LP_CPU_PWR2_REG 	0x5011518c
set LPPERI_CLK_EN_REG       0x50120000
set LPPERI_RESET_EN_REG     0x50120008
set LPPERI_CPU_REG 			0x5012000c

proc reg_set { ADDR VAL } {
	mmw $ADDR $VAL 0
}

proc reg_clear { ADDR VAL } {
	mmw $ADDR 0 $VAL
}

proc lpcore_reset { } {
    global PMU_LP_CPU_PWR0_REG PMU_HP_LP_CPU_COMM_REG PMU_LP_CPU_PWR1_REG PMU_LP_CPU_PWR2_REG
    global LPPERI_CLK_EN_REG LPPERI_RESET_EN_REG LPPERI_CPU_REG _TARGETNAME_0

    $_TARGETNAME_0 arp_examine
    targets $_TARGETNAME_0

    # LPPERI.reset_en.rst_en_lp_core = 1;
    # LPPERI.reset_en.rst_en_lp_core = 0;
    reg_set $LPPERI_RESET_EN_REG 0x80000000
    reg_clear $LPPERI_RESET_EN_REG 0x80000000

    # LPPERI.clk_en.ck_en_lp_core = 1;
    reg_set $LPPERI_CLK_EN_REG 0x80000000

    # PMU.lp_ext.pwr0.slp_stall_en = 1;
    # PMU.lp_ext.pwr0.slp_reset_en = 1;
	reg_set $PMU_LP_CPU_PWR0_REG 0x60000000

    # PMU.lp_ext.pwr1.wakeup_en = LP_CORE_LL_WAKEUP_SOURCE_HP_CPU;
    reg_clear $PMU_LP_CPU_PWR1_REG 0x80000000
    # PMU.lp_ext.pwr1.sleep_req = 1;
	reg_set $PMU_LP_CPU_PWR2_REG 0x400000

	# set up infinite loop code 'j 0x0' at 0x50108180
	mww 0x50108180 0x0000006F

    # PMU.hp_lp_cpu_comm.hp_trigger_lp = 1;
	reg_set $PMU_HP_LP_CPU_COMM_REG 0x80000000

    # Wait for the reset to happen
    sleep 10
    poll

    # PMU.lp_ext.pwr0.slp_stall_en = 1;
    # PMU.lp_ext.pwr0.slp_reset_en = 0;
	reg_clear $PMU_LP_CPU_PWR0_REG 0x40000000

    # LPPERI.cpu.lpcore_dbgm_unavaliable = 0;
	reg_clear $LPPERI_CPU_REG 0x80000000
}

$_TARGETNAME_0 configure -event reset-start {
    lpcore_reset
}
